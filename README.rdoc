##Get Redis Up and Running for sidekiq
♕ redis-server /usr/local/etc/redis.conf

##To start the sidekiq server

♕ bundle exec sidekiq

[sidekiq railscast](http://railscasts.com/episodes/366-sidekiq)

###seed file
rake seed_repos_and_issues

##Scraps
github_connection = GithubConnection.new('xfernandox', 'dummyrepo', 1)
issue_number = github_connection.client.issue(github_connection.repo, github_connection.issue_no).number
repo = Repo.find_by_owner_name_and_name('xfernandox', 'dummyrepo')
github_connection.info.open_issues # outputs a number like 6
all_issues = github_connection.issues #returns all issue objects


define repo_owner in issue controller
  
add endoresement column in issues:
  - type integer

add checkbox on issue show page only shown to repo owner
  - 

badge on show page based on endorsment, lack of, disapproal
  - 






DOWN THE ROAD: Implementing cached information from Github's database: User dashboard's following repos + bounties

# a github's users followers and followings won't change much on a day to day basis
# at most, once a day, ping github for their followers and followings
# put that data somewhere perishale, if it could auto expire every day, that'd be great
# use that data for the calculation



# on a users dashboard
# check our local cache for that users cached github following and followers
# if the cache is empty or stale
  # ping github and cache
# use that data to do calculations


Rails.cache