##Get Redis Up and Running for sidekiq
♕ redis-server /usr/local/etc/redis.conf

##To start the sidekiq server

♕ bundle exec sidekiq

[sidekiq railscast](http://railscasts.com/episodes/366-sidekiq)

###seed file
rake seed_repos_and_issues

##Scraps
github_connection = GithubConnection.new('xfernandox', 'dummyrepo', 1)
issue_number = github_connection.client.issue(github_connection.repo, github_connection.issue_no).number
repo = Repo.find_by_owner_name_and_name('xfernandox', 'dummyrepo')
github_connection.info.open_issues # outputs a number like 6
all_issues = github_connection.issues #returns all issue objects


define repo_owner in issue controller
  
add endoresement column in issues:
  - type integer

add checkbox on issue show page only shown to repo owner
  - 

badge on show page based on endorsment, lack of, disapproal


DOWN THE ROAD: Implementing cached information from Github's database: User dashboard's following repos + bounties

# a github's users followers and followings won't change much on a day to day basis
# at most, once a day, ping github for their followers and followings
# put that data somewhere perishale, if it could auto expire every day, that'd be great
# use that data for the calculation



# on a users dashboard
# check our local cache for that users cached github following and followers
# if the cache is empty or stale
  # ping github and cache
# use that data to do calculations


Rails.cache



//INSTALL POSTGRES

    brew install postgresql
    initdb /usr/local/var/postgres -E utf8          # create database
    mkdir -p ~/Library/LaunchAgents                 # add postgres to startup on boot
    cp /usr/local/Cellar/postgresql/9.1.4/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/    # copy postgres prefs into startup
    launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist           # load prefs


Then manually start the database with:

    pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start     # start the db server


# Log into the server

    psql -d postgres -U <your_username>

# Create a gitbo DB user
    CREATE USER gitbo WITH PASSWORD 'whateveryourpasswordis';

# Create DB for test and development environment
    CREATE DATABASE gitbo_dev;
    CREATE DATABASE gitbo_test;

# assign permissions for the newly created gitbo user

    GRANT ALL PRIVILEGES ON DATABASE gitbo_test to gitbo;
    GRANT ALL PRIVILEGES ON DATABASE gitbo_dev to gitbo;

#update your database.yml

    # SQLite version 3.x
    #   gem install sqlite3
    #
    #   Ensure the SQLite 3 gem is defined in your Gemfile
    #   gem 'sqlite3'
    development:
      adapter: postgresql
      database: gitbo_test
      username: gitbo
      password: password
      host: localhost
    
    # Warning: The database defined as "test" will be erased and
    # re-generated from your development database when you run "rake".
    # Do not set this db to the same as development or production.
    test:
      adapter: postgresql
      database: gitbo_dev
      username: gitbo
      password: password
      host: localhost
    
    production:
      adapter: postgresql
      database: gitbo
      username: gitbo
      password: password
      host: localhost



- Memcached
♕ /usr/local/bin/memcached

Client:
Octokit::Client.new(:login => "flatiron-dummy", :password => "flatiron2012")